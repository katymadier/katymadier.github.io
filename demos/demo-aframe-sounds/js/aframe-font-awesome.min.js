!function(e){var t={};function o(s){if(t[s])return t[s].exports;var n=t[s]={exports:{},id:s,loaded:!1};return e[s].call(n.exports,n,n.exports,o),n.loaded=!0,n.exports}o.m=e,o.c=t,o.p="",o(0)}([function(e,t){AFRAME.registerSystem("font-awesome",{schema:{timeout:{type:"number",default:2500}},cache:{},promises:{},loaded:!1,promise:null,draw:function(e){const t=[e.charcode,e.color,e.size].join("-");if(!this.cache[t]){const o=e.size,s=document.createElement("canvas");s.width=o,s.height=o;const n=s.getContext("2d"),i=800/(1024/o),a=o/2;n.textAlign="center",n.textBaseline="middle",n.fillStyle=e.color,n.font=i+"px FontAwesome",n.fillText(String.fromCharCode("0x"+e.charcode),a,a),this.cache[t]=s.toDataURL()}return this.cache[t]},isStylesheetLoaded:function(){return this.loaded?Promise.resolve():this.isFontAwesomeAvailable()?(this.onLoaded(),Promise.resolve()):(this.promise||(this.promise=new Promise(e=>{if(this.canCheckDocumentFonts()){const t=()=>{this.isFontAwesomeAvailable()&&(document.fonts.removeEventListener("loadingdone",t),this.onLoaded(e))};document.fonts.addEventListener("loadingdone",t)}else console.warn("aframe-font-awesome: Unable to determine when FontAwesome stylesheet is loaded. Drawing fonts after "+this.data.timeout+" seconds"),console.warn('aframe-font-awesome: You can change the timeout by adding "font-awesome="timeout: $timeout" to your a-scene'),window.setTimeout(()=>{this.onLoaded(e)},this.data.timeout)})),this.promise)},isFontAwesomeAvailable:function(){return this.canCheckDocumentFonts()&&document.fonts.check("1px FontAwesome")},canCheckDocumentFonts:function(){return void 0!==document.fonts&&document.fonts.check},onLoaded:function(e){this.el.emit("font-awesome.loaded"),this.loaded=!0,e&&e()}}),AFRAME.registerComponent("font-awesome",{schema:{charcode:{type:"string"},color:{default:"#000",type:"string"},size:{default:"1024",type:"number"},visibleWhenDrawn:{default:"true",type:"boolean"}},update:function(){this.data.visibleWhenDrawn&&this.el.setAttribute("visible","false"),this.system.isStylesheetLoaded().then(function(){const e=this.system.draw(this.data);this.el.setAttribute("src",e),this.el.emit("font-awesome.drawn"),this.data.visibleWhenDrawn&&setTimeout(()=>this.el.setAttribute("visible","true"))}.bind(this))}}),AFRAME.registerPrimitive("a-font-awesome",{defaultComponents:{geometry:{primitive:"plane"},material:{side:"double",transparent:"true"}},mappings:{charcode:"font-awesome.charcode",color:"font-awesome.color",size:"font-awesome.size",src:"material.src"}})}]);